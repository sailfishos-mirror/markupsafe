name: Publish
on:
  push:
    tags: ['*']
  # When a new version of Python is released, the workflow can be run manually to
  # publish new wheels for the existing tag.
  workflow_dispatch:
    inputs:
      tag:
        description: git tag to check out and upload to
        required: true
      python:
        description: Python version, like "cp311"
        required: true
jobs:
  sdist:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          ref: ${{ inputs.tag }}
      - uses: astral-sh/setup-uv@f0ec1fc3b38f5e7cd731bb6ce540c5af426746bb # v6.1.0
        with:
          enable-cache: true
          prune-cache: false
      - uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
        with:
          python-version-file: pyproject.toml
      - run: echo "SOURCE_DATE_EPOCH=$(git log -1 --pretty=%ct)" >> $GITHUB_ENV
      - run: uv build --sdist
      - uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: build-sdist
          path: ./dist
        # The sdist is not needed on new Python version builds. However, this job must
        # be present in the run for the hash job, so only the upload is skipped.
        if: github.event_name == 'push'
  wheels:
    name: wheels / ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: astral-sh/setup-uv@f0ec1fc3b38f5e7cd731bb6ce540c5af426746bb # v6.1.0
        with:
          enable-cache: true
          prune-cache: false
      - name: Set up QEMU
        if: runner.os == 'Linux'
        uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3.6.0
        with:
          platforms: arm64
      - run: echo "SOURCE_DATE_EPOCH=$(git log -1 --pretty=%ct)" >> $GITHUB_ENV
      - uses: pypa/cibuildwheel@7c619efba910c04005a835b110b057fc28fd6e93 # v3.2.0
        env:
          # For workflow_dispatch, only build the new Python version.
          CIBW_BUILD: ${{ inputs.python && format('{0}-*', inputs.python) || null }}
      - uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: build-wheels-${{ matrix.os }}
          path: ./wheelhouse
  create-release:
    needs: [sdist, wheels]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
        with:
          path: dist
          pattern: build-*
          merge-multiple: true
      # When building a new tag, create a new draft release.
      - if: github.event_name == 'push'
        name: create release
        run: >
          gh release create --draft --repo ${{ github.repository }}
          ${{ inputs.tag || github.ref_name }} dist/*
        env:
          GH_TOKEN: ${{ github.token }}
      # When running manually, update the existing release with more files.
      - if: github.event_name == 'workflow_dispatch'
        name: update release
        run: >
          gh release upload --repo ${{ github.repository }}
          ${{ inputs.tag || github.ref_name }} dist/*
        env:
          GH_TOKEN: ${{ github.token }}
  publish-pypi:
    needs: [sdist, wheels]
    # Wait for approval before attempting to upload to PyPI. This allows reviewing the
    # files in the draft release.
    environment:
      name: publish
      url: https://pypi.org/project/MarkupSafe/${{ github.ref_name }}
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    steps:
      - uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
        with:
          path: dist
          pattern: build-*
          merge-multiple: true
      - uses: pypa/gh-action-pypi-publish@76f52bc884231f62b9a034ebfe128415bbaabdfc # v1.12.4
        with:
          skip-existing: true
